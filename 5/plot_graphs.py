import numpy as np
import matplotlib.pyplot as plt
import random
import secrets
import pickle
import json

from os import listdir
       
if __name__ == "__main__":
    average_runs_averagepayoff_SD1_array = json.loads(open('average_runs_averagepayoff_SD1.json').read())
    average_runs_averagepayoff_SD2_array = json.loads(open('average_runs_averagepayoff_SD2.json').read())
    #average_runs_diversity_l20_array = json.loads(open('average_runs_diversity_l20.json').read())

    # plotting performance using graphs =>    
    plt.figure()
    plt.plot(average_runs_averagepayoff_SD1_array, label = 'Separation Degree - 0.35', linewidth=0.75, color = 'blue')
    plt.plot(average_runs_averagepayoff_SD2_array, label = 'Separation Degree - 0.96', linewidth=0.75, color = 'red')
    #plt.plot(average_runs_diversity_l20_array, label = 'Number of Local Communities l - 20', linewidth=0.75, color = 'blue')

    plt.ylim(ymin=0)
    plt.xlabel("Iterations", fontsize=15)
    plt.ylabel("Average Individual Payoff", fontsize=15)
    plt.title("Dynamics of Average Individual Payoff under Networks with Large Separation Degree (Average in 100 runs)", fontsize=20)
    plt.legend()
    plt.grid(True)
    plt.show()

    average_runs_conformity_array_SD2 = json.loads(open('average_runs_conformity_SD2.json').read())
    average_runs_conformity_array_SD1 = json.loads(open('average_runs_conformity_SD1.json').read())

    #average_runs_conformity_SD1_array = json.loads(open('average_runs_conformity_SD1.json').read())
    #average_runs_diversity_SD1_array = json.loads(open('average_runs_diversity_SD1.json').read())
    
    average_runs_conformity_lc1_SD1_array = json.loads(open('average_conformity_lc1_SD1.json').read())
    average_runs_conformity_lc2_SD1_array = json.loads(open('average_conformity_lc2_SD1.json').read())
    average_runs_conformity_lc3_SD1_array = json.loads(open('average_conformity_lc3_SD1.json').read())
    average_runs_conformity_lc4_SD1_array = json.loads(open('average_conformity_lc4_SD1.json').read())
    average_runs_conformity_lc5_SD1_array = json.loads(open('average_conformity_lc5_SD1.json').read())
    average_runs_conformity_lc6_SD1_array = json.loads(open('average_conformity_lc6_SD1.json').read())
    average_runs_conformity_lc7_SD1_array = json.loads(open('average_conformity_lc7_SD1.json').read())
    average_runs_conformity_lc8_SD1_array = json.loads(open('average_conformity_lc8_SD1.json').read())
    average_runs_conformity_lc9_SD1_array = json.loads(open('average_conformity_lc9_SD1.json').read())
    average_runs_conformity_lc10_SD1_array = json.loads(open('average_conformity_lc10_SD1.json').read())

    #average_runs_conformity_SD2_array = json.loads(open('average_runs_conformity_SD2.json').read())
    #average_runs_diversity_SD2_array = json.loads(open('average_runs_diversity_SD2.json').read())
    average_runs_conformity_lc1_SD2_array = json.loads(open('average_conformity_lc1_SD2.json').read())
    average_runs_conformity_lc2_SD2_array = json.loads(open('average_conformity_lc2_SD2.json').read())
    average_runs_conformity_lc3_SD2_array = json.loads(open('average_conformity_lc3_SD2.json').read())
    average_runs_conformity_lc4_SD2_array = json.loads(open('average_conformity_lc4_SD2.json').read())
    average_runs_conformity_lc5_SD2_array = json.loads(open('average_conformity_lc5_SD2.json').read())
    average_runs_conformity_lc6_SD2_array = json.loads(open('average_conformity_lc6_SD2.json').read())
    average_runs_conformity_lc7_SD2_array = json.loads(open('average_conformity_lc7_SD2.json').read())
    average_runs_conformity_lc8_SD2_array = json.loads(open('average_conformity_lc8_SD2.json').read())
    average_runs_conformity_lc9_SD2_array = json.loads(open('average_conformity_lc9_SD2.json').read())
    average_runs_conformity_lc10_SD2_array = json.loads(open('average_conformity_lc10_SD2.json').read())

    # plotting performance using graphs =>    
    plt.figure()
    plt.plot(average_runs_conformity_array_SD2, label = 'Separation Degree - 0.96', linewidth=0.75, color = 'red')
    plt.plot(average_runs_conformity_array_SD1, label = 'Separation Degree - 0.35', linewidth=0.75, color = 'blue')
    #plt.plot(average_runs_conformity_array_SD1, linewidth=0.75, color = 'green')

    plt.ylim(ymin=0)
    plt.xlabel("Iterations", fontsize=15)
    plt.ylabel("Conformity", fontsize=15)
    plt.title("Dynamics of Conformity in Instance Networks (Average in 100 runs)", fontsize=20)
    #plt.title("Dynamics of Conformity in Instance Networks with Different Values of Separation Degree", fontsize=20)
    plt.legend()
    plt.grid(True)
    plt.show()

    number_of_iterations = 2000
    p = np.arange(0, number_of_iterations, 1)
    f, (ax1, ax2, ax3, ax4, ax5, ax6, ax7, ax8, ax9, ax10) = plt.subplots(10, sharex=True, sharey=True)
    ax1.plot(p, average_runs_conformity_lc1_SD1_array, label = 'SD1 - Conformity - local community #1', color='green')
    plt.ylim(ymin=0)
    ax2.plot(p, average_runs_conformity_lc2_SD1_array, label = 'SD1 - Conformity - local community #2', color='red')
    plt.ylim(ymin=0)
    ax3.plot(p, average_runs_conformity_lc3_SD1_array, label = 'SD1 - Conformity - local community #3', color='blue')
    plt.ylim(ymin=0)
    ax4.plot(p, average_runs_conformity_lc4_SD1_array, label = 'SD1 - Conformity - local community #4', color='orange')
    plt.ylim(ymin=0)
    ax5.plot(p, average_runs_conformity_lc5_SD1_array, label = 'SD1 - Conformity - local community #5', color='pink')
    plt.ylim(ymin=0)
    ax6.plot(p, average_runs_conformity_lc6_SD1_array, label = 'SD1 - Conformity - local community #6', color='brown')
    plt.ylim(ymin=0)
    ax7.plot(p, average_runs_conformity_lc7_SD1_array, label = 'SD1 - Conformity - local community #7', color='purple')
    plt.ylim(ymin=0)
    ax8.plot(p, average_runs_conformity_lc8_SD1_array, label = 'SD1 - Conformity - local community #8', color='black')
    plt.ylim(ymin=0)
    ax9.plot(p, average_runs_conformity_lc9_SD1_array, label = 'SD1 - Conformity - local community #9', color='silver')
    plt.ylim(ymin=0)
    ax10.plot(p, average_runs_conformity_lc10_SD1_array, label = 'SD1 - Conformity - local community #10', color='yellow')
    plt.ylim(ymin=0)
    ax1.legend()
    ax2.legend()
    ax3.legend()
    ax4.legend()
    ax5.legend()
    ax6.legend()
    ax7.legend()
    ax8.legend()
    ax9.legend()
    ax10.legend()
    ax1.grid(True)
    ax2.grid(True)
    ax3.grid(True)
    ax4.grid(True)
    ax5.grid(True)
    ax6.grid(True)
    ax7.grid(True)
    ax8.grid(True)
    ax9.grid(True)
    ax10.grid(True)
    ax1.set_title('SD1 - Plotting Individual Conformity of all Local Communities (Average in 100 runs)', fontsize=20)
    ax10.set_xlabel('Iterations', fontsize=15)
    ax5.set_ylabel('Conformity', fontsize=15)
    f.subplots_adjust(hspace=0)
    plt.setp([a.get_xticklabels() for a in f.axes[:-1]], visible=False)
    plt.show()

    number_of_iterations = 2000
    p = np.arange(0, number_of_iterations, 1)
    f, (ax1, ax2, ax3, ax4, ax5, ax6, ax7, ax8, ax9, ax10) = plt.subplots(10, sharex=True, sharey=True)
    ax1.plot(p, average_runs_conformity_lc1_SD2_array, label = 'SD2 - Conformity - local community #1', color='green')
    plt.ylim(ymin=0)
    ax2.plot(p, average_runs_conformity_lc2_SD2_array, label = 'SD2 - Conformity - local community #2', color='red')
    plt.ylim(ymin=0)
    ax3.plot(p, average_runs_conformity_lc3_SD2_array, label = 'SD2 - Conformity - local community #3', color='blue')
    plt.ylim(ymin=0)
    ax4.plot(p, average_runs_conformity_lc4_SD2_array, label = 'SD2 - Conformity - local community #4', color='orange')
    plt.ylim(ymin=0)
    ax5.plot(p, average_runs_conformity_lc5_SD2_array, label = 'SD2 - Conformity - local community #5', color='pink')
    plt.ylim(ymin=0)
    ax6.plot(p, average_runs_conformity_lc6_SD2_array, label = 'SD2 - Conformity - local community #6', color='brown')
    plt.ylim(ymin=0)
    ax7.plot(p, average_runs_conformity_lc7_SD2_array, label = 'SD2 - Conformity - local community #7', color='purple')
    plt.ylim(ymin=0)
    ax8.plot(p, average_runs_conformity_lc8_SD2_array, label = 'SD2 - Conformity - local community #8', color='black')
    plt.ylim(ymin=0)
    ax9.plot(p, average_runs_conformity_lc9_SD2_array, label = 'SD2 - Conformity - local community #9', color='silver')
    plt.ylim(ymin=0)
    ax10.plot(p, average_runs_conformity_lc10_SD2_array, label = 'SD2 - Conformity - local community #10', color='yellow')
    plt.ylim(ymin=0)
    ax1.legend()
    ax2.legend()
    ax3.legend()
    ax4.legend()
    ax5.legend()
    ax6.legend()
    ax7.legend()
    ax8.legend()
    ax9.legend()
    ax10.legend()
    ax1.grid(True)
    ax2.grid(True)
    ax3.grid(True)
    ax4.grid(True)
    ax5.grid(True)
    ax6.grid(True)
    ax7.grid(True)
    ax8.grid(True)
    ax9.grid(True)
    ax10.grid(True)
    ax1.set_title('SD2 - Plotting Individual Conformity of all Local Communities (Average in 100 runs)', fontsize=20)
    ax10.set_xlabel('Iterations', fontsize=15)
    ax5.set_ylabel('Conformity', fontsize=15)
    f.subplots_adjust(hspace=0)
    plt.setp([a.get_xticklabels() for a in f.axes[:-1]], visible=False)
    plt.show()
    
    average_runs_norms1_frequency_lc1_SD1_array = json.loads(open('average_runs_norms1_frequency_lc1_SD1.json').read())
    average_runs_norms1_frequency_lc2_SD1_array = json.loads(open('average_runs_norms1_frequency_lc2_SD1.json').read())
    average_runs_norms1_frequency_lc3_SD1_array = json.loads(open('average_runs_norms1_frequency_lc3_SD1.json').read())
    average_runs_norms1_frequency_lc4_SD1_array = json.loads(open('average_runs_norms1_frequency_lc4_SD1.json').read())
    average_runs_norms1_frequency_lc5_SD1_array = json.loads(open('average_runs_norms1_frequency_lc5_SD1.json').read())
    average_runs_norms1_frequency_lc6_SD1_array = json.loads(open('average_runs_norms1_frequency_lc6_SD1.json').read())
    average_runs_norms1_frequency_lc7_SD1_array = json.loads(open('average_runs_norms1_frequency_lc7_SD1.json').read())
    average_runs_norms1_frequency_lc8_SD1_array = json.loads(open('average_runs_norms1_frequency_lc8_SD1.json').read())
    average_runs_norms1_frequency_lc9_SD1_array = json.loads(open('average_runs_norms1_frequency_lc9_SD1.json').read())
    average_runs_norms1_frequency_lc10_SD1_array = json.loads(open('average_runs_norms1_frequency_lc10_SD1.json').read())

    average_runs_norms2_frequency_lc1_SD1_array = json.loads(open('average_runs_norms2_frequency_lc1_SD1.json').read())
    average_runs_norms2_frequency_lc2_SD1_array = json.loads(open('average_runs_norms2_frequency_lc2_SD1.json').read())
    average_runs_norms2_frequency_lc3_SD1_array = json.loads(open('average_runs_norms2_frequency_lc3_SD1.json').read())
    average_runs_norms2_frequency_lc4_SD1_array = json.loads(open('average_runs_norms2_frequency_lc4_SD1.json').read())
    average_runs_norms2_frequency_lc5_SD1_array = json.loads(open('average_runs_norms2_frequency_lc5_SD1.json').read())
    average_runs_norms2_frequency_lc6_SD1_array = json.loads(open('average_runs_norms2_frequency_lc6_SD1.json').read())
    average_runs_norms2_frequency_lc7_SD1_array = json.loads(open('average_runs_norms2_frequency_lc7_SD1.json').read())
    average_runs_norms2_frequency_lc8_SD1_array = json.loads(open('average_runs_norms2_frequency_lc8_SD1.json').read())
    average_runs_norms2_frequency_lc9_SD1_array = json.loads(open('average_runs_norms2_frequency_lc9_SD1.json').read())
    average_runs_norms2_frequency_lc10_SD1_array = json.loads(open('average_runs_norms2_frequency_lc10_SD1.json').read())

    average_runs_norms1_frequency_lc1_SD2_array = json.loads(open('average_runs_norms1_frequency_lc1_SD2.json').read())
    average_runs_norms1_frequency_lc2_SD2_array = json.loads(open('average_runs_norms1_frequency_lc2_SD2.json').read())
    average_runs_norms1_frequency_lc3_SD2_array = json.loads(open('average_runs_norms1_frequency_lc3_SD2.json').read())
    average_runs_norms1_frequency_lc4_SD2_array = json.loads(open('average_runs_norms1_frequency_lc4_SD2.json').read())
    average_runs_norms1_frequency_lc5_SD2_array = json.loads(open('average_runs_norms1_frequency_lc5_SD2.json').read())
    average_runs_norms1_frequency_lc6_SD2_array = json.loads(open('average_runs_norms1_frequency_lc6_SD2.json').read())
    average_runs_norms1_frequency_lc7_SD2_array = json.loads(open('average_runs_norms1_frequency_lc7_SD2.json').read())
    average_runs_norms1_frequency_lc8_SD2_array = json.loads(open('average_runs_norms1_frequency_lc8_SD2.json').read())
    average_runs_norms1_frequency_lc9_SD2_array = json.loads(open('average_runs_norms1_frequency_lc9_SD2.json').read())
    average_runs_norms1_frequency_lc10_SD2_array = json.loads(open('average_runs_norms1_frequency_lc10_SD2.json').read())

    average_runs_norms2_frequency_lc1_SD2_array = json.loads(open('average_runs_norms2_frequency_lc1_SD2.json').read())
    average_runs_norms2_frequency_lc2_SD2_array = json.loads(open('average_runs_norms2_frequency_lc2_SD2.json').read())
    average_runs_norms2_frequency_lc3_SD2_array = json.loads(open('average_runs_norms2_frequency_lc3_SD2.json').read())
    average_runs_norms2_frequency_lc4_SD2_array = json.loads(open('average_runs_norms2_frequency_lc4_SD2.json').read())
    average_runs_norms2_frequency_lc5_SD2_array = json.loads(open('average_runs_norms2_frequency_lc5_SD2.json').read())
    average_runs_norms2_frequency_lc6_SD2_array = json.loads(open('average_runs_norms2_frequency_lc6_SD2.json').read())
    average_runs_norms2_frequency_lc7_SD2_array = json.loads(open('average_runs_norms2_frequency_lc7_SD2.json').read())
    average_runs_norms2_frequency_lc8_SD2_array = json.loads(open('average_runs_norms2_frequency_lc8_SD2.json').read())
    average_runs_norms2_frequency_lc9_SD2_array = json.loads(open('average_runs_norms2_frequency_lc9_SD2.json').read())
    average_runs_norms2_frequency_lc10_SD2_array = json.loads(open('average_runs_norms2_frequency_lc10_SD2.json').read())

    f, (ax1, ax2, ax3, ax4, ax5, ax6, ax7, ax8, ax9, ax10) = plt.subplots(10, sharex=True, sharey=True)
    ax1.plot(average_runs_norms1_frequency_lc1_SD1_array, label = 'Norm 1 in lc1', linewidth=0.75, color = 'red')
    ax1.plot(average_runs_norms2_frequency_lc1_SD1_array, label = 'Norm 2 in lc1', linewidth=0.75, color = 'green')

    ax2.plot(average_runs_norms1_frequency_lc2_SD1_array, label = 'Norm 1 in lc2', linewidth=0.75, color = 'red')
    ax2.plot(average_runs_norms2_frequency_lc2_SD1_array, label = 'Norm 2 in lc2', linewidth=0.75, color = 'green')

    ax3.plot(average_runs_norms1_frequency_lc3_SD1_array, label = 'Norm 1 in lc3', linewidth=0.75, color = 'red')
    ax3.plot(average_runs_norms2_frequency_lc3_SD1_array, label = 'Norm 2 in lc3', linewidth=0.75, color = 'green')

    ax4.plot(average_runs_norms1_frequency_lc4_SD1_array, label = 'Norm 1 in lc4', linewidth=0.75, color = 'red')
    ax4.plot(average_runs_norms2_frequency_lc4_SD1_array, label = 'Norm 2 in lc4', linewidth=0.75, color = 'green')

    ax5.plot(average_runs_norms1_frequency_lc5_SD1_array, label = 'Norm 1 in lc5', linewidth=0.75, color = 'red')
    ax5.plot(average_runs_norms2_frequency_lc5_SD1_array, label = 'Norm 2 in lc5', linewidth=0.75, color = 'green')

    ax6.plot(average_runs_norms1_frequency_lc6_SD1_array, label = 'Norm 1 in lc6', linewidth=0.75, color = 'red')
    ax6.plot(average_runs_norms2_frequency_lc6_SD1_array, label = 'Norm 2 in lc6', linewidth=0.75, color = 'green')

    ax7.plot(average_runs_norms1_frequency_lc7_SD1_array, label = 'Norm 1 in lc7', linewidth=0.75, color = 'red')
    ax7.plot(average_runs_norms2_frequency_lc7_SD1_array, label = 'Norm 2 in lc7', linewidth=0.75, color = 'green')

    ax8.plot(average_runs_norms1_frequency_lc8_SD1_array, label = 'Norm 1 in lc8', linewidth=0.75, color = 'red')
    ax8.plot(average_runs_norms2_frequency_lc8_SD1_array, label = 'Norm 2 in lc8', linewidth=0.75, color = 'green')

    ax9.plot(average_runs_norms1_frequency_lc9_SD1_array, label = 'Norm 1 in lc9', linewidth=0.75, color = 'red')
    ax9.plot(average_runs_norms2_frequency_lc9_SD1_array, label = 'Norm 2 in lc9', linewidth=0.75, color = 'green')

    ax10.plot(average_runs_norms1_frequency_lc10_SD1_array, label = 'Norm 1 in lc10', linewidth=0.75, color = 'red')
    ax10.plot(average_runs_norms2_frequency_lc10_SD1_array, label = 'Norm 2 in lc10', linewidth=0.75, color = 'green')

    #plt.gca().legend(loc='center left', bbox_to_anchor=(1, 0.5))
    #plt.show()
    #ax10.legend(bbox_to_anchor=(1.05, 1), loc='upper left', borderaxespad=0.)

    ax1.legend(loc = 'upper right', fontsize = 8)
    ax2.legend(loc = 'upper right', fontsize = 8)
    ax3.legend(loc = 'upper right', fontsize = 8)
    ax4.legend(loc = 'upper right', fontsize = 8)
    ax5.legend(loc = 'upper right', fontsize = 8)
    ax6.legend(loc = 'upper right', fontsize = 8)
    ax7.legend(loc = 'upper right', fontsize = 8)
    ax8.legend(loc = 'upper right', fontsize = 8)
    ax9.legend(loc = 'upper right', fontsize = 8)
    ax10.legend(loc = 'upper right', fontsize = 8)

    ax1.grid(True)
    ax2.grid(True)
    ax3.grid(True)
    ax4.grid(True)
    ax5.grid(True)
    ax6.grid(True)
    ax7.grid(True)
    ax8.grid(True)
    ax9.grid(True)
    ax10.grid(True)

    ax1.set_title('SD1 - Frequence of Norm Emergence (Average in 100 Runs)', fontsize=20)
    ax10.set_xlabel('Iterations', fontsize=15)
    ax5.set_ylabel('Frequence', fontsize=15)
    f.subplots_adjust(hspace=0)
    plt.setp([a.get_xticklabels() for a in f.axes[:-1]], visible=False)
    plt.show()

    f, (ax1, ax2, ax3, ax4, ax5, ax6, ax7, ax8, ax9, ax10) = plt.subplots(10, sharex=True, sharey=True)
    ax1.plot(average_runs_norms1_frequency_lc1_SD2_array, label = 'Norm 1 in lc1', linewidth=0.75, color = 'red')
    ax1.plot(average_runs_norms2_frequency_lc1_SD2_array, label = 'Norm 2 in lc1', linewidth=0.75, color = 'green')

    ax2.plot(average_runs_norms1_frequency_lc2_SD2_array, label = 'Norm 1 in lc2', linewidth=0.75, color = 'red')
    ax2.plot(average_runs_norms2_frequency_lc2_SD2_array, label = 'Norm 2 in lc2', linewidth=0.75, color = 'green')

    ax3.plot(average_runs_norms1_frequency_lc3_SD2_array, label = 'Norm 1 in lc3', linewidth=0.75, color = 'red')
    ax3.plot(average_runs_norms2_frequency_lc3_SD2_array, label = 'Norm 2 in lc3', linewidth=0.75, color = 'green')

    ax4.plot(average_runs_norms1_frequency_lc4_SD2_array, label = 'Norm 1 in lc4', linewidth=0.75, color = 'red')
    ax4.plot(average_runs_norms2_frequency_lc4_SD2_array, label = 'Norm 2 in lc4', linewidth=0.75, color = 'green')

    ax5.plot(average_runs_norms1_frequency_lc5_SD2_array, label = 'Norm 1 in lc5', linewidth=0.75, color = 'red')
    ax5.plot(average_runs_norms2_frequency_lc5_SD2_array, label = 'Norm 2 in lc5', linewidth=0.75, color = 'green')

    ax6.plot(average_runs_norms1_frequency_lc6_SD2_array, label = 'Norm 1 in lc6', linewidth=0.75, color = 'red')
    ax6.plot(average_runs_norms2_frequency_lc6_SD2_array, label = 'Norm 2 in lc6', linewidth=0.75, color = 'green')

    ax7.plot(average_runs_norms1_frequency_lc7_SD2_array, label = 'Norm 1 in lc7', linewidth=0.75, color = 'red')
    ax7.plot(average_runs_norms2_frequency_lc7_SD2_array, label = 'Norm 2 in lc7', linewidth=0.75, color = 'green')

    ax8.plot(average_runs_norms1_frequency_lc8_SD2_array, label = 'Norm 1 in lc8', linewidth=0.75, color = 'red')
    ax8.plot(average_runs_norms2_frequency_lc8_SD2_array, label = 'Norm 2 in lc8', linewidth=0.75, color = 'green')

    ax9.plot(average_runs_norms1_frequency_lc9_SD2_array, label = 'Norm 1 in lc9', linewidth=0.75, color = 'red')
    ax9.plot(average_runs_norms2_frequency_lc9_SD2_array, label = 'Norm 2 in lc9', linewidth=0.75, color = 'green')

    ax10.plot(average_runs_norms1_frequency_lc10_SD2_array, label = 'Norm 1 in lc10', linewidth=0.75, color = 'red')
    ax10.plot(average_runs_norms2_frequency_lc10_SD2_array, label = 'Norm 2 in lc10', linewidth=0.75, color = 'green')

    #plt.gca().legend(loc='center left', bbox_to_anchor=(1, 0.5))
    #plt.show()
    #ax10.legend(bbox_to_anchor=(1.05, 1), loc='upper left', borderaxespad=0.)

    ax1.legend(loc = 'upper right', fontsize = 8)
    ax2.legend(loc = 'upper right', fontsize = 8)
    ax3.legend(loc = 'upper right', fontsize = 8)
    ax4.legend(loc = 'upper right', fontsize = 8)
    ax5.legend(loc = 'upper right', fontsize = 8)
    ax6.legend(loc = 'upper right', fontsize = 8)
    ax7.legend(loc = 'upper right', fontsize = 8)
    ax8.legend(loc = 'upper right', fontsize = 8)
    ax9.legend(loc = 'upper right', fontsize = 8)
    ax10.legend(loc = 'upper right', fontsize = 8)

    ax1.grid(True)
    ax2.grid(True)
    ax3.grid(True)
    ax4.grid(True)
    ax5.grid(True)
    ax6.grid(True)
    ax7.grid(True)
    ax8.grid(True)
    ax9.grid(True)
    ax10.grid(True)

    ax1.set_title('SD2 - Frequence of Norm Emergence (Average in 100 Runs)', fontsize=20)
    ax10.set_xlabel('Iterations', fontsize=15)
    ax5.set_ylabel('Frequence', fontsize=15)
    f.subplots_adjust(hspace=0)
    plt.setp([a.get_xticklabels() for a in f.axes[:-1]], visible=False)
    plt.show()
